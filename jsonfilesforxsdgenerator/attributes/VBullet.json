[
    {
        "table": "Functional Attributes",
        "attrs": [
            {
                "description": "This attribute lets you set the configuration whether the chart should appear in an animated fashion. If you do not want to animate any part of the chart, set this as 0.",
                "range": "0/1",
                "type": "Boolean",
                "name": "animation"
            },
            {
                "description": "The entire chart can now act as a hotspot. Use this URL to define the hotspot link for the chart. The link can be specified in FusionCharts Link Format.",
                "range": "",
                "type": "URL in FusionCharts format",
                "name": "clickURL"
            },
            {
                "description": "Sets whether the `clickURL` attribute (that sets a link to which the user is directed when the chart is clicked) overrides the `link` attribute (that sets a link to which the user is directed when a data plot is clicked). \n\nDefault value: 0 (`clickURL` does not override `link`)",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.7.0",
                "name": "clickURLOverridesPlotLinks"
            },
            {
                "description": "Each chart has 5 pre-defined color palettes which you can choose from. Each palette renders the chart in a different color theme. ",
                "range": "1-5",
                "type": "Number",
                "name": "palette"
            },
            {
                "description": "If you want your own palette derived from a particular hex color, you can specify the same here. All other colors on the chart will automatically derive from that palette.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "paletteThemeColor"
            },
            {
                "description": "If you've defined any annotation groups over the chart, using this attribute you can set the duration after which they'll render on the chart. The timer starts from the time the chart has initialized.",
                "range": "In seconds",
                "type": "Number",
                "name": "annRenderDelay"
            },
            {
                "description": "Whether to show &quot;Print Chart&quot; item in the context menu of the chart? Even if you opt to hide the item in context menu, you can still opt to invoke `print()` JavaScript method of the chart to print the same.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPrintMenuItem"
            },
            {
                "description": "Setting this attribute to 1, you can allow the chart to automatically resize itself when the parent container of the chart is resized.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.2",
                "name": "manageResize"
            },
            {
                "description": "This attribute, when set to __1__, indicates to the chart that the text (rendered on the chart) may contain RTL characters and the textual display has to be managed accordingly. ",
                "range": "",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "hasRTLText"
            }
        ],
        "description": ""
    },
    {
        "table": "Chart Message-related Attributes",
        "attrs": [
            {
                "description": "This attribute allows to set a custom chart message. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessage"
            },
            {
                "description": "This attribute allows to set a custom font for all chart messages.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFont"
            },
            {
                "description": "This attribute allows to set a custom font size for all chart messages.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "baseChartMessageFontSize"
            },
            {
                "description": "This attribute allows to set a custom font color for all chart messages.",
                "range": "",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "baseChartMessageColor"
            },
            {
                "description": "This attribute allows to set a custom horizontal alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageHAlign"
            },
            {
                "description": "This attribute allows to set a custom vertical alignment for all images displayed as chart messages. \n\nDefault value: middle",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageVAlign"
            },
            {
                "description": "This attribute allows to set a transparency for all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0-100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageAlpha"
            },
            {
                "description": "This attribute allows to set a scale for magnifying all images displayed as chart messages. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "baseChartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when a chart begins to load. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when a chart begins to load.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "loadMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when a chart begins to load.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "loadMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when a chart begins to load.",
                "range": "",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "loadMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "loadMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0-100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `loadMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "loadMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when the specified chart type is not supported. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed when the specified chart type is not supported.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when the specified chart type is not supported.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when the specified chart type is not supported.",
                "range": "",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "typeNotSupportedMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0-100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `typeNotSupportedMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "typeNotSupportedMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while rendering the chart. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while rendering the chart.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while rendering the chart.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while rendering the chart.",
                "range": "",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "renderErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0-100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `renderErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "renderErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed when chart data begins loading. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed when chart data begins loading.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed when chart data begins loading.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed when chart data begins loading.",
                "range": "",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadStartMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0-100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadStartMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadStartMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data loaded for a chart is empty. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the data loaded for a chart is empty",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the data loaded for a chart is empty.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the data loaded for a chart is empty.",
                "range": "",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataEmptyMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0-100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataEmptyMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataEmptyMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if an error is encountered while loading chart data. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessage"
            },
            {
                "description": "This attribute allows to set a font for the message displayed if an error is encountered while loading chart data.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if an error is encountered while loading chart data.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if an error is encountered while loading chart data.",
                "range": "",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataLoadErrorMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0-100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataLoadErrorMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataLoadErrorMessageImageScale"
            },
            {
                "description": "This attribute allows to set the message to be displayed if the data to be loaded for the chart is invalid. To display an image as the chart message, prefix __I-__ to the image URL.",
                "range": "",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessage"
            },
            {
                "description": "This attribute allows to set the font for the message displayed if the specified chart data is invalid.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFont"
            },
            {
                "description": "This attribute allows to set the font size for the message displayed if the specified chart data is invalid.",
                "range": "",
                "type": "String",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageFontSize"
            },
            {
                "description": "This attribute allows to set the font color for the message displayed if the specified chart data is invalid.",
                "range": "",
                "type": "Color",
                "versionsince": "3.5.0",
                "name": "dataInvalidMessageColor"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom horizontal alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageHAlign` attribute",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageHAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set a custom vertical alignment for the image. \n\nDefault value: value assigned to the `baseChartMessageImageVAlign` attribute",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageVAlign"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the transparency of the image. \n\nDefault value: 100",
                "range": "0-100",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageAlpha"
            },
            {
                "description": "If an image is displayed as the chart `dataInvalidMessage`, this attribute allows to set the scale for magnifying the image. \n\nDefault value: 100",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.7.0",
                "name": "dataInvalidMessageImageScale"
            }
        ],
        "description": "These attributes let you set and configure custom chart messages, using text as well as images."
    },
    {
        "table": "Axis & Tick mark properties",
        "attrs": [
            {
                "description": "This attribute lets you set whether the y-axis lower limit will be 0 (in case of all positive values on chart) or should the y-axis lower limit adapt itself to a different figure based on values provided to the chart.",
                "range": "0/1",
                "type": "Boolean",
                "name": "setAdaptiveYMin"
            },
            {
                "description": "This attribute helps you explicitly set the upper limit of the chart. If you don't specify this value, the chart automatically calculates the upper limit based on the data provided by you.",
                "range": "",
                "type": "Number",
                "name": "upperLimit"
            },
            {
                "description": "This attribute helps you explicitly set the lower limit of the chart. If you don't specify this value, the chart automatically calculates the lower limit based on the data provided by you.",
                "range": "",
                "type": "Number",
                "name": "lowerLimit"
            },
            {
                "description": "If you want to display a string label instead of the chart upper limit, you can use this attribute.",
                "range": "",
                "type": "String",
                "name": "upperLimitDisplay"
            },
            {
                "description": "If you want to display a string label instead of the chart lower limit, you can use this attribute.",
                "range": "",
                "type": "String",
                "name": "lowerLimitDisplay"
            },
            {
                "description": "Whether to show tick marks?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTickMarks"
            },
            {
                "description": "Whether to show tick values?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showTickValues"
            },
            {
                "description": "Whether to show limit values (chart upper and lower limit)?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showLimits"
            },
            {
                "description": "Whether tick marks & values will appear at the left of graph or right side?",
                "range": "0/1",
                "type": "Boolean",
                "name": "ticksOnRight"
            },
            {
                "description": "If you want to skip showing every n-th tick value, you can specify it here.",
                "range": "",
                "type": "Number",
                "name": "tickValueStep"
            },
            {
                "description": "Number of major tick marks on the chart. The tick marks of the upper and lower limit will always be displayed.",
                "range": "",
                "type": "Number",
                "name": "majorTMNumber"
            },
            {
                "description": "Color of the major tick marks.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "majorTMColor"
            },
            {
                "description": "Alpha of the major tick marks.",
                "range": "0-100",
                "type": "Number",
                "name": "majorTMAlpha"
            },
            {
                "description": "Width of the major tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "majorTMHeight"
            },
            {
                "description": "Thickness of the major tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "majorTMThickness"
            },
            {
                "description": "Number of minor tick marks. Minor tick marks refer to the tick marks present in between two major tick marks.",
                "range": "",
                "type": "Number",
                "name": "minorTMNumber"
            },
            {
                "description": "Color of minor tick marks.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "minorTMColor"
            },
            {
                "description": "Alpha of minor tick marks.",
                "range": "0-100",
                "type": "Number",
                "name": "minorTMAlpha"
            },
            {
                "description": "Width of minor tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "minorTMHeight"
            },
            {
                "description": "Thickness of minor tick marks.",
                "range": "In pixels",
                "type": "Number",
                "name": "minorTMThickness"
            },
            {
                "description": "Distance of tick mark from the color range.",
                "range": "In pixels",
                "type": "Number",
                "name": "tickMarkDistance"
            },
            {
                "description": "Distance of tick value from tick marks/color range.",
                "range": "",
                "type": "IntegerNumber",
                "name": "tickValueDistance"
            },
            {
                "description": "Number of decimals to which tick values will be rounded to.",
                "range": "",
                "type": "Number",
                "name": "tickValueDecimals"
            },
            {
                "description": "Whether to force number of decimals on tick values?",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceTickValueDecimals"
            },
            {
                "description": "Whether to place ticks inside the gauge or outside?",
                "range": "0/1",
                "type": "Boolean",
                "name": "placeTicksInside"
            },
            {
                "description": "Whether to place tick values inside the gauge?",
                "range": "0/1",
                "type": "Boolean",
                "name": "placeValuesInside"
            },
            {
                "description": "Whether to automatically adjust number of major tick marks, so as to get best values?",
                "range": "0/1",
                "type": "Boolean",
                "name": "adjustTM"
            }
        ],
        "description": "The following attributes configures the Axis and the tick marks on the chart. "
    },
    {
        "table": "Chart captions",
        "attrs": [
            {
                "description": "Caption of the chart.",
                "range": "",
                "type": "String",
                "name": "caption"
            },
            {
                "description": "Sub-caption of the chart.",
                "range": "",
                "type": "String",
                "name": "subCaption"
            }
        ],
        "description": "Using these attributes, you can set the various headings and titles of chart like caption, sub-caption. "
    },
    {
        "table": "Chart Caption Cosmetics",
        "attrs": [
            {
                "description": "Sets the caption font size in pixels",
                "range": "0 - 72",
                "type": "Number",
                "name": "captionFontSize"
            },
            {
                "description": "Sets the sub-caption font size (in pixels)",
                "range": "0 - 72",
                "type": "Number",
                "name": "subCaptionFontSize"
            },
            {
                "description": "Sets the caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "captionFont"
            },
            {
                "description": "Sets the sub-caption font family",
                "range": "Font Name",
                "type": "String",
                "name": "subCaptionFont"
            },
            {
                "description": "Sets the caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "captionFontColor"
            },
            {
                "description": "Sets the sub-caption font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "subCaptionFontColor"
            },
            {
                "description": "Whether the caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "captionFontBold"
            },
            {
                "description": "Whether the sub caption font should be displayed in bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "subCaptionFontBold"
            },
            {
                "description": "Whether the caption is aligned with the canvas. Else, it will be aligned with the entire chart area",
                "range": "0/1",
                "type": "Boolean",
                "name": "alignCaptionWithCanvas"
            }
        ],
        "description": "These attributes let you configure the cosmetics of chart caption and sub-caption."
    },
    {
        "table": "Number Formatting Properties",
        "attrs": [
            {
                "description": "This configuration determines whether the numbers displayed on the chart will be formatted using commas, e.g., 40,000 if 'formatNumber': '1'; and 40000 if 'formatNumber': '0';.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumber"
            },
            {
                "description": "Using this attribute, you could add prefix to all the numbers visible on the graph. For example, to represent all dollars figure on the chart, you could specify this attribute to $ to show like $40000, $50000.",
                "range": "",
                "type": "String",
                "name": "numberPrefix"
            },
            {
                "description": "Using this attribute, you could add suffix to all the numbers visible on the graph. For example, to represent all figures quantified as per annum on the chart, you could specify this attribute to '/a' to show like 40000/a, 50000/a.",
                "range": "",
                "type": "String",
                "name": "numberSuffix"
            },
            {
                "description": "Number of decimal places to which all numbers on the chart will be rounded to.",
                "range": "",
                "type": "Number",
                "name": "decimals"
            },
            {
                "description": "Whether to add 0 padding at the end of decimal numbers? For example, if you set decimals as 2 and a number is 23.4. If `forceDecimals` is set to 1, the number will automatically be calculated to 23.40 (note the extra 0 at the end).",
                "range": "0/1",
                "type": "Boolean",
                "name": "forceDecimals"
            },
            {
                "description": "Configuration whether to add K (thousands) and M (millions) to a number after truncating and rounding it - e.g., if formatNumberScale is set to 1, 1043 will become 1.04K (with decimals set to 2 places). Same with numbers in millions - an M will be added at the end.",
                "range": "0/1",
                "type": "Boolean",
                "name": "formatNumberScale"
            },
            {
                "description": "The default unit of the numbers that you're providing to the chart.",
                "range": "",
                "type": "String",
                "name": "defaultNumberScale"
            },
            {
                "description": "Unit of each block of the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleUnit"
            },
            {
                "description": "Range of the various blocks that constitute the scale.",
                "range": "",
                "type": "String",
                "name": "numberScaleValue"
            },
            {
                "description": "If a data value is less than the lowest given number is the number scale, this attribute forces the lower value of the  `numberScaleUnit` to be applied to that data value.  This attribute works only when `“formatNumberScale”: “1”` and the `defaultNumberScale` attribute is not defined. \n\nFor example, if `“numberScaleUnit”: “K, M”`, `“numberScaleValue”: “1000, 1000”`, and `“forceNumberScale”: “1”`, a data value of __400__ will be rendered as __0.40K__.",
                "range": "0/1",
                "type": "Boolean",
                "versionsince": "3.9.0",
                "name": "forceNumberScale"
            },
            {
                "description": "Whether recursive scaling should be applied.",
                "range": "0/1",
                "type": "Boolean",
                "name": "scaleRecursively"
            },
            {
                "description": "How many recursions to complete during recursive scaling? -1 completes the entire set of recursion.",
                "range": "",
                "type": "Number",
                "name": "maxScaleRecursion"
            },
            {
                "description": "What character to use to separate the scales that are generated after recursion?",
                "range": "",
                "type": "String",
                "name": "scaleSeparator"
            },
            {
                "description": "This attribute helps you specify the character to be used as the decimal separator in a number.",
                "range": "",
                "type": "String",
                "name": "decimalSeparator"
            },
            {
                "description": "This attribute helps you specify the character to be used as the thousands separator in a number.",
                "range": "",
                "type": "String",
                "name": "thousandSeparator"
            },
            {
                "description": "This option helps you specify the position of the thousand separator.",
                "range": "",
                "type": "Number",
                "versionsince": "3.2 - SR1",
                "name": "thousandSeparatorPosition"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML/JSON, if you specify such values, it will give an error while converting to number. The chart accepts the input decimal and thousand separators from user, so that it can convert it accordingly into the required format. This attribute lets you input the decimal separators.",
                "range": "",
                "type": "String",
                "name": "inDecimalSeparator"
            },
            {
                "description": "In some countries, commas are used as decimal separators and dots as thousand separators. In XML/JSON, if you specify such values, it will give an error while converting to number. The chart accepts the input decimal and thousand separators from user, so that it can convert it accordingly into the required format. This attribute lets you input the thousand separators.",
                "range": "",
                "type": "String",
                "name": "inThousandSeparator"
            }
        ],
        "description": "Using the attributes below, you can control a myriad of options like: Formatting of commas and decimals Number prefixes and suffixes Decimal places to which the numbers will round to Scaling of numbers based on a user defined scale Custom number input formats "
    },
    {
        "table": "Data Plot properties",
        "attrs": [
            {
                "description": "Whether to show the value for the chart?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showValue"
            },
            {
                "description": "Whether to plot the value as bar or as dot?",
                "range": "0/1",
                "type": "Boolean",
                "name": "plotAsDot"
            },
            {
                "description": "Width percent of the color range that the plot fill bar should occupy.",
                "range": "0-100",
                "type": "Number",
                "name": "plotFillPercent"
            },
            {
                "description": "Width percent of the color range that the target fill bar should occupy.",
                "range": "0-100",
                "type": "Number",
                "name": "targetFillPercent"
            },
            {
                "description": "Fill color for the plot bar.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotFillColor"
            },
            {
                "description": "Fill alpha for the plot bar.",
                "range": "0-100",
                "type": "Number",
                "name": "plotFillAlpha"
            },
            {
                "description": "Whether to show border for the bar?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showPlotBorder"
            },
            {
                "description": "Border color for the bar.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "plotBorderColor"
            },
            {
                "description": "Border thickness for the bar.",
                "range": "In pixels",
                "type": "Number",
                "name": "plotBorderThickness"
            },
            {
                "description": "Border alpha for the bar.",
                "range": "0-100",
                "type": "Number",
                "name": "plotBorderAlpha"
            },
            {
                "description": "Color for the target line.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "targetColor"
            },
            {
                "description": "Thickness for the target line.",
                "range": "In pixels",
                "type": "Number",
                "name": "targetThickness"
            }
        ],
        "description": "These attributes let you configure how your plot will appear on the chart. "
    },
    {
        "table": "The color Object and The colorRange Object",
        "path": "color",
        "attrs": [
            {
                "description": "Gradient fill formula for color range.",
                "range": "",
                "type": "String",
                "name": "colorRangeFillMix"
            },
            {
                "description": "Ratio for each constituent color in the color range.",
                "range": "",
                "type": "Ratio of each separated by comma",
                "name": "colorRangeFillRatio"
            },
            {
                "description": "Whether to show border for color range?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showColorRangeBorder"
            },
            {
                "description": "Border color for the color range.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "colorRangeBorderColor"
            },
            {
                "description": "Border thickness for the color range.",
                "range": "In pixels",
                "type": "Number",
                "name": "colorRangeBorderThickness"
            },
            {
                "description": "Border alpha for the color range.",
                "range": "0-100",
                "type": "Number",
                "name": "colorRangeBorderAlpha"
            },
            {
                "description": "Whether to apply the shadow effect for color range?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showShadow"
            }
        ],
        "description": "Attributes of the `color` object (child of the `colorRange` object) are used to define ranges for dividing the gauge scale. Although the `color` object has to be defined within the `colorRange` object, ranges cannot be collectively customized using the `colorRange` object  because it does not have any attributes of its own."
    },
    {
        "table": "Chart Cosmetics",
        "attrs": [
            {
                "description": "This attribute sets the background color for the chart. You can set any hex color code as the value of this attribute. To specify a gradient as background color, separate the hex color codes of each color in the gradient using comma. Example: `#FF5904, #FFFFFF`.",
                "range": "",
                "type": "separate the hex color codes of each color in the gradient using comma",
                "name": "bgColor"
            },
            {
                "description": "Sets the alpha (transparency) for the background. If you've opted for gradient background, you need to set a list of alpha(s) separated by comma.",
                "range": "0-100",
                "type": "Number",
                "name": "bgAlpha"
            },
            {
                "description": "If you've opted for a gradient background, this attribute lets you set the ratio of each color constituent.",
                "range": "",
                "type": "Ratio of each separated by comma",
                "name": "bgRatio"
            },
            {
                "description": "Angle of the background color, in case of a gradient.",
                "range": "0-360",
                "type": "Number",
                "name": "bgAngle"
            },
            {
                "description": "Whether to show a border around the chart or not?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showBorder"
            },
            {
                "description": "Border color of the chart.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "borderColor"
            },
            {
                "description": "Border thickness of the chart.",
                "range": "In pixels",
                "type": "Number",
                "name": "borderThickness"
            },
            {
                "description": "Border alpha of the chart.",
                "range": "0-100",
                "type": "Number",
                "name": "borderAlpha"
            },
            {
                "description": "To place any image (JPG/PNG/GIF) as background of the chart, enter the (path and) name of the background image. It should be in the same domain as the chart.",
                "range": "",
                "type": "String",
                "name": "bgImage"
            },
            {
                "description": "This attribute specifies the opacity for the loaded background image.",
                "range": "0-100",
                "type": "Number",
                "name": "bgImageAlpha"
            },
            {
                "description": "Helps you specify the mode in which the background image is to be displayed. Stretch - expands the image to fit the entire chart area, without maintaining original image constraints. Tile - the image is repeated as a pattern on the entire chart area. Fit - fits the image proportionately on the chart area. Fill -proportionately fills the entire chart area with the image. Center - the image is positioned at the center of the chart area. None - Default mode.",
                "range": "stretch, tile, fit, fill, center, none",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageDisplayMode"
            },
            {
                "description": "Helps you to vertically align the background image.",
                "range": "top, middle, bottom",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageVAlign"
            },
            {
                "description": "Helps you to horizontally align the background image.",
                "range": "left, middle, right",
                "type": "String",
                "versionsince": "3.2",
                "name": "bgImageHAlign"
            },
            {
                "description": "Helps you magnify the background image. This attribute will only work when the attribute `bgImageDisplayMode` is set to none, center, or tile.",
                "range": "0-300",
                "type": "Number",
                "versionsince": "3.2",
                "name": "bgImageScale"
            },
            {
                "description": "You can load an external logo (JPEG/PNG) to your chart, this attribute lets you specify the URL. Due to cross domain security restrictions it is advised to use a logo from the same domain name as your charts.",
                "range": "",
                "type": "String",
                "name": "logoURL"
            },
            {
                "description": "Where to position the logo on the chart: TL - Top-left TR - Top-right BR - Bottom right BL - Bottom left CC - Center of screen",
                "range": "TL, TR, BL, BR, CC",
                "type": "String",
                "name": "logoPosition"
            },
            {
                "description": "Once the logo has loaded on the chart, you can configure its opacity using this attribute.",
                "range": "0-100",
                "type": "Number",
                "name": "logoAlpha"
            },
            {
                "description": "You can also change the size of externally loaded logo at run-time by specifying a value for this parameter.",
                "range": "0-100",
                "type": "Number",
                "name": "logoScale"
            },
            {
                "description": "If you want to link the logo to an external URL, specify the link in this attribute. The link can be in FusionCharts link format, allowing you to link to new windows, pop-ups, frames etc.",
                "range": "",
                "type": "String",
                "name": "logoLink"
            }
        ],
        "description": "The following attributes let you configure chart cosmetics like background color, background alpha, canvas color & alpha etc. "
    },
    {
        "table": "Data Value Cosmetics",
        "attrs": [
            {
                "description": "Sets the font of the values in the chart",
                "range": "Font Name",
                "type": "String",
                "name": "valueFont"
            },
            {
                "description": "Specifies the value font color",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueFontColor"
            },
            {
                "description": "Specifies the value font size",
                "range": "0 - 72",
                "type": "Number",
                "name": "valueFontSize"
            },
            {
                "description": "Whether value font should be bold",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueFontBold"
            },
            {
                "description": "Whether value font should be italicized",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueFontItalic"
            },
            {
                "description": "Sets the background color for value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBgColor"
            },
            {
                "description": "Sets the border color around the value text",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "valueBorderColor"
            },
            {
                "description": "Sets the value alpha including font and background",
                "range": "0-100",
                "type": "Number",
                "name": "valueAlpha"
            },
            {
                "description": "Sets the value font alpha",
                "range": "0-100",
                "type": "Number",
                "name": "valueFontAlpha"
            },
            {
                "description": "Sets the value background alpha",
                "range": "0-100",
                "type": "Number",
                "name": "valueBgAlpha"
            },
            {
                "description": "Sets the value border alpha",
                "range": "0-100",
                "type": "Number",
                "name": "valueBorderAlpha"
            },
            {
                "description": "Sets the value border thickness",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderThickness"
            },
            {
                "description": "Sets the padding between the value and its surrounding border",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderPadding"
            },
            {
                "description": "Sets the value border radius",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderRadius"
            },
            {
                "description": "Whether the border around the value should be rendered as a dashed border",
                "range": "0/1",
                "type": "Boolean",
                "name": "valueBorderDashed"
            },
            {
                "description": "Sets the gap between two consecutive dashes.",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderDashGap"
            },
            {
                "description": "Sets the length of each dash",
                "range": "In Pixels",
                "type": "Number",
                "name": "valueBorderDashLen"
            }
        ],
        "description": "These attributes let you configure font, background and border cosmetics, of value text-field that appear for each data plot."
    },
    {
        "table": "Font Properties",
        "attrs": [
            {
                "description": "This attribute lets you set the font face (family) of all the text (data labels, values etc.) on chart. If you specify outCnvBaseFont attribute also, then this attribute controls only the font face of text within the chart canvas bounds.",
                "range": "",
                "type": "Font Name",
                "name": "baseFont"
            },
            {
                "description": "This attribute sets the base font size of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font size provided here.",
                "range": "",
                "type": "Number",
                "name": "baseFontSize"
            },
            {
                "description": "This attribute sets the base font color of the chart i.e., all the values and the names in the chart which lie on the canvas will be displayed using the font color provided here.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "baseFontColor"
            }
        ],
        "description": "Using the attributes below, you can define the generic font properties for all the text on the chart. These attributes allow you a high level control over font properties. If you intend to specify font properties for individual chart elements (like Caption, sub-caption etc.), you'll need to use the Styles feature. Using Styles, you can also specify advanced font properties like Bold, Italics, HTML Mode etc. Using Styles you can also configure real-time values. "
    },
    {
        "table": "Tooltip properties",
        "attrs": [
            {
                "description": "Whether to show tooltip for the chart?",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTip"
            },
            {
                "description": "Background color for the tooltip",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBgColor"
            },
            {
                "description": "Font color for the tool-tip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipColor"
            },
            {
                "description": "Border Color for the tooltip.",
                "range": "Hex Color Code",
                "type": "Color",
                "name": "toolTipBorderColor"
            },
            {
                "description": "Whether to show shadow for tooltips.",
                "range": "0/1",
                "type": "Boolean",
                "name": "showToolTipShadow"
            }
        ],
        "description": "These attributes let you control the tooltip. You can set the background color, border color, separator character and few other details. "
    },
    {
        "table": "Chart Paddings & Margins",
        "attrs": [
            {
                "description": "This attribute lets you control the vertical space (in pixels) between the caption and top part of chart canvas.",
                "range": "In pixels",
                "type": "Number",
                "name": "captionPadding"
            },
            {
                "description": "Distance between the value box and chart canvas.",
                "range": "In pixels",
                "type": "Number",
                "name": "valuePadding"
            },
            {
                "description": "Amount of empty space that you want to put on the left side of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartLeftMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the right side of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartRightMargin"
            },
            {
                "description": "Amount of empty space that you want to put on the top of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartTopMargin"
            },
            {
                "description": "Amount of empty space that you want to put at the bottom of your chart. Nothing is rendered in this space.",
                "range": "In pixels",
                "type": "Number",
                "name": "chartBottomMargin"
            }
        ],
        "description": "The following attributes help you control chart margins and paddings. FusionCharts Suite XT allows you manually customize the padding of various elements on the chart to allow advanced manipulation and control over chart visualization. Padding in FusionCharts Suite XT XT is always defined in pixels, unless the attribute itself suggests some other scale (like `plotSpacePercent`, which configures the spacing using percentage values). You can also define the chart margins. Chart Margins refer to the empty space left on the top, bottom, left and right of the chart. It's not necessary for you to specify any padding/margin values. FusionCharts Suite XT automatically assumes the best values for the same, if you do not specify the same. "
    }
]